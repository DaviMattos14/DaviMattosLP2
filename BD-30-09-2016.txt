--  30/09/2016

-- O operador IN verifica se um elemento pertence a um conjunto.
-- EX: reuperar todas as informações dos fornecedores S1. S3, S5

 SELECT * FROM Salesman WHERE scod IN ('S1','S3', 'S5');

 -- Subconsultas IN, são subconsultas aninhadas. Ooperador IN indica que as consultas mais internas devem ser avaliadas primeiro.
 -- EX1: retornar o código, o nome e a cidade dos fornecedores que fornecem a peça P2.

 SELECT scod, sname, city FROM Salesman
	WHERE scod IN (SELECT scod FROM SalesmanPieces WHERE pcod = 'P2');

-- EX2: recuperar todas as informações dos fornecedores que fornecem pelo menos uma peça vermelha.

SELECT * FROM Salesman 
	WHERE scod IN (SELECT scod FROM SalesmanPieces WHERE pcod IN (SELECT pcod FROM Pieces WHERE color = 'Red'));

-- Subconsulta com NOT IN
-- EX3: retornar o código, o nome e a cidade dos fornecedores que NÃO fornece a peça P2

SELECT scod, sname, city FROM Salesman 
	WHERE scod NOT IN (SELECT scod FROM SalesmanPieces WHERE pcod = 'P2');

-- Subconsulta com operador de comparação 
-- EX: retornar o código e  o nome dos funcionários localizados na mesma cidade que o fornecedor S1.

SELECT scod, sname FROM Salesman
	WHERE city = (SELECT city FROM Salesman WHERE scod = 'S1');

-- Subconsulta EXISTS; o operador EXISTS representa o quantificador lógico existencial
-- EX: retornar o código, o nome e a cidade dos fornecedores que fornecem a peça P2
	
	SELECT scod, sname, city FROM Salesman
		WHERE EXISTS (SELECT * FROM SalesmanPieces WHERE scod = Salesman.scod AND pcod = 'P2');
		
-- Subconsulta NOT EXISTS
-- EX: retornar o código, o nome e a cidade dos fornecedores que fornecem a peça P2

	SELECT scod, sname, city FROM Salesman
		WHERE NOT EXISTS (SELECT * FROM SalesmanPieces WHERE scod = Salesman.scod AND pcod = 'P2');

-- Clásula UNION executa a união de duas consultas 
-- EX: recuperar o código e o nome das peças que tem o peso  maior que 16 ou que são fornecidas pelo fornecedor S2

	SELECT pcod, pname FROM Pieces WHERE (weight > 16) 
	UNION 
	SELECT p.pcod, p.pname FROM SalesmanPieces sp, Pieces p WHERE p.pcod = sp.pcod AND scod = 'S2';
 
-- Sintaxe Geral do Comando Update (atualização de dados)
-- UPDATE tabela
-- SET atribuiçôes 
-- [WHERE predicado]

	UPDATE Salesman SET city = 'Rio' WHERE scod = 'S4';
	
	SELECT * FROM Salesman
	 
-- Sintaxe Geral do Comando DELETE
-- DELETE FROM tabela
-- [WHERE PREDICADO]

	DELETE FROM SalesmanPieces WHERE scod = 'S4';
	DELETE FROM Salesman WHERE scod = 'S4';
	
	SELECT * FROM Salesman
	SELECT * FROM SalesmanPieces

-- Sintaxe Geral do Comando INSERT 
-- INSERT
-- INTO tabela
-- VALUES (constante)

	INSERT INTO Salesman VALUES ('S4', 'Clark', 20, 'London');
	INSERT INTO SalesmanPieces(scod, pcod) VALUES('S4', 'P2');
	INSERT INTO SalesmanPieces VALUES ('S4', 'P4', 300);
	INSERT INTO SalesmanPieces VALUES ('S4', 'P5', 400);

	SELECT * FROM SalesmanPieces

	SELECT DISTINCT p.color FROM Pieces p, SalesmanPieces sp
		WHERE sp.qty > (SELECT AVG(qty) FROM SalesmanPieces);
		