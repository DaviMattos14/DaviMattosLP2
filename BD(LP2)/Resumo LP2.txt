MySqlConnection : Responsável por genrenciar uma conexão com BD.

MySqlCommand : Controla as operações no BD.

 * Depende do Tipo de operação pra escolher o método apropriado.

ExecuteReader: Retornar tabela

ExecuteNonQuery: Manuntenção(ex: update, delete, etc)

ExecuteScalar: Retorna um valor numérico

------------------------------------------------------------------------------------------

 * Cofiguração de uma operação no BD.

MySqlConnection conn = new MySqlConnection("Server=localhost;Database=lp2;Uid=root;Pwd=");

MySqlCommand cmd = new MySqlCommand();
cmd.Connection = conn;
cmd.CommandText = "SELECT COUNT(1) FROM Pessoa;";
cmd.Connection.Open(); // conn.Open();

------------------------------------------------------------------------------------------

 ExecuteScalar:

	    cmd.CommandText = "SELECT COUNT(*) FROM Pessoa";
            int nPessoas = Convert.ToInt32(cmd.ExecuteScalar());
            Console.WriteLine("Nº de pessoas = {0}", nPessoas);

------------------------------------------------------------------------------------------
ExecuteReader: Realiza consultas que retornam dados em tabelas.

Classe: MySqlDataReader

MySqlDataReader resultado;
resultado = cmd.ExecuteReader();

if(resultado.HasRows)
	{
	while (resultado.Read()) 
		{
		  int id = resultado.GetINt32(0);
		  char sexo = resultado.GetChar(1);
		}
	}

------------------------------------------------------------------------------------------

INSERT INTO <tabela> (col1, col2, ..., colN)
	VALUES (valor1, valor2, valor3, ..., valorN)


UPDATE <tabela>
SET col1 = valor1, col2 = valor2, ...
WHERE <condição>

DELETE FROM <tabela>
WHERE <condição>

------------------------------------------------------------------------------------------

cmd.CommandText -> Objeto da Classe MySqlCommand

-> "SELECT * FROM Pessoa WHERE p.name = '"+valor+"';";

As consultasb são montadas usando o input do usuário.

-> "SELECT * FROM Pessoa WHERE p.name = '@nome' 
cmd.Parameters.AddWithValue("@nome", "Francisco");

------------------------------------------------------------------------------------------

------- Classe Pessoa

class Pessoa
    {
        public int Id { get; set; }
        public string Nome { get; set; }
        public string Sobrenome { get; set; }
    }

------------------------------------------------------------------------------------------

Método 1

using MySql.Data.MySqlClient;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace TenhoProvaAmanhã
{
    class Program
    {
        static void Main(string[] args)
        {
            Pessoa p = new Pessoa();
            Console.Write("Nome: ");
            p.Nome = Console.ReadLine();
            Console.Write("Sobrenome: ");
            p.Sobrenome = Console.ReadLine();
            Cadastrar(p);

            MySqlCommand cmd = new MySqlCommand()
            {
                Connection = new MySqlConnection("Server=localhost;Database=turma;Uid=root;Pwd="),
                CommandText = "SELECT * FROM Pessoa;"
            };
            cmd.Connection.Open();
            MySqlDataReader result = cmd.ExecuteReader();
            if (result.HasRows)
            {
                while(result.Read())
                {
                    p.Id = result.GetInt32(0);
                    p.Nome = result.GetString(1);
                    p.Sobrenome = result.GetString(2);
                }
            }
            Console.WriteLine(" Id = {0}\n Nome = {1}\n Sobrenome = {2}", p.Id, p.Nome, p.Sobrenome);

        }

        static void Cadastrar(Pessoa p)
        {
            MySqlCommand cmd = new MySqlCommand()
            {
                Connection = new MySqlConnection("Server=localhost;Database=turma;Uid=root;Pwd="),
                CommandText = "INSERT INTO Pessoa (Nome, Sobrenome) VALUES (@nome, @sobrenome);"
            };

            cmd.Parameters.AddWithValue("@nome", p.Nome);
            cmd.Parameters.AddWithValue("@sobrenome", p.Sobrenome);

            cmd.Connection.Open();
            cmd.ExecuteNonQuery();
            cmd.Connection.Close();

        }
    }
}

------------------------------------------------------------------------------------------

Método 2 (ultilizando List<>)

using MySql.Data.MySqlClient;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace TenhoProvaAmanhã
{
    class Program
    {
        static void Main(string[] args)
        {
            Pessoa p = new Pessoa();
            Console.Write("Nome: ");
            p.Nome = Console.ReadLine();
            Console.Write("Sobrenome: ");
            p.Sobrenome = Console.ReadLine();
            Cadastrar(p);
            
            foreach (Pessoa P in Consulta())
            {
                Console.WriteLine(" Id = {0}\n Nome = {1}\n Sobrenome = {2}", p.Id, p.Nome, p.Sobrenome);
            }

        }

        static void Cadastrar(Pessoa p)
        {
            MySqlCommand cmd = new MySqlCommand()
            {
                Connection = new MySqlConnection("Server=localhost;Database=turma;Uid=root;Pwd="),
                CommandText = "INSERT INTO Pessoa (Nome, Sobrenome) VALUES (@nome, @sobrenome);"
            };

            cmd.Parameters.AddWithValue("@nome", p.Nome);
            cmd.Parameters.AddWithValue("@sobrenome", p.Sobrenome);

            cmd.Connection.Open();
            cmd.ExecuteNonQuery();
            cmd.Connection.Close();

        }

        public static List<Pessoa> Consulta()
        {
            List<Pessoa> pessoas = new List<Pessoa>();

            MySqlCommand cmd = new MySqlCommand()
            {
                Connection = new MySqlConnection("Server=localhost;Database=turma;Uid=root;Pwd="),
                CommandText = "SELECT * FROM Pessoa"
            };

            cmd.Connection.Open();
            MySqlDataReader result = cmd.ExecuteReader();
            if(result.HasRows)
            {
                while (result.Read())
                {
                    Pessoa p = new Pessoa();
                    p.Id = result.GetInt32(0);
                    p.Nome = result.GetString(1);
                    p.Sobrenome = result.GetString(2);
                    pessoas.Add(p);
                }
            }
            cmd.Connection.Close();
            return pessoas;
        }
    }
}
